{
  "_from": "connect-mongodb-session",
  "_id": "connect-mongodb-session@2.0.3",
  "_inBundle": false,
  "_integrity": "sha512-dIfQqI6Fsh3f6LOLT2a68VZo2BYQgKo6TX95qxB1HdMGSHzXAPPVYptWJGzIGfsNrORptyTLC1XqY+aJPqqCnw==",
  "_location": "/connect-mongodb-session",
  "_phantomChildren": {
    "require_optional": "1.0.1"
  },
  "_requested": {
    "escapedName": "connect-mongodb-session",
    "fetchSpec": "latest",
    "name": "connect-mongodb-session",
    "raw": "connect-mongodb-session",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/connect-mongodb-session/-/connect-mongodb-session-2.0.3.tgz",
  "_shasum": "af8ac4e30b684794f93d6909237cec2f80081f44",
  "_spec": "connect-mongodb-session",
  "_where": "/nfs/nas02a_personnels/uapviup/fredouil/Work/ArchiWeb/MEAN",
  "author": {
    "email": "valeri.karpov@mongodb.com",
    "name": "Valeri Karpov"
  },
  "bugs": {
    "url": "https://github.com/mongodb-js/connect-mongodb-session/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "mongodb": "~3.0.4"
  },
  "deprecated": false,
  "description": "MongoDB session store for connect/express built by MongoDB",
  "devDependencies": {
    "acquit": "0.6.3",
    "acquit-ignore": "0.0.5",
    "acquit-markdown": "0.0.8",
    "cookie": "0.3.1",
    "express": "4.14.0",
    "express-session": "1.15.2",
    "gulp": "3.9.1",
    "gulp-jscs": "4.0.0",
    "gulp-mocha": "4.3.0",
    "istanbul": "0.4.5",
    "jscs": "3.0.7",
    "mocha": "3.1.2",
    "request": "2.81.0",
    "strawman": "0.0.1"
  },
  "engines": "node >= 0.10.0",
  "homepage": "https://github.com/mongodb-js/connect-mongodb-session#readme",
  "jscsConfig": {
    "disallowMultipleVarDecl": true,
    "preset": "airbnb",
    "requireMultipleVarDecl": null
  },
  "keywords": [
    "connect",
    "express",
    "mongo",
    "mongodb",
    "session"
  ],
  "main": "index.js",
  "name": "connect-mongodb-session",
  "optionalDependencies": {},
  "readme": "# connect-mongodb-session\n\n[MongoDB](http://mongodb.com)-backed session storage for [connect](https://www.npmjs.org/package/connect) and [Express](http://www.expressjs.com). Meant to be a well-maintained and fully-featured replacement for modules like [connect-mongo](https://www.npmjs.org/package/connect-mongo)\n\n[![Build Status](https://travis-ci.org/mongodb-js/connect-mongodb-session.svg?branch=master)](https://travis-ci.org/mongodb-js/connect-mongodb-session) [![Coverage Status](https://coveralls.io/repos/mongodb-js/connect-mongodb-session/badge.svg?branch=master)](https://coveralls.io/r/mongodb-js/connect-mongodb-session?branch=master)\n\n\n\n# MongoDBStore\n\n\nThis module exports a single function which takes an instance of connect\n(or Express) and returns a `MongoDBStore` class that can be used to\nstore sessions in MongoDB.\n\n\n## It can store sessions for Express 4\n\n\nIf you pass in an instance of the\n[`express-session` module](http://npmjs.org/package/express-session)\nthe MongoDBStore class will enable you to store your Express sessions\nin MongoDB.\n\nThe MongoDBStore class has 3 required options:\n\n1. `uri`: a [MongoDB connection string](http://docs.mongodb.org/manual/reference/connection-string/)\n2. `databaseName`: the MongoDB database to store sessions in\n3. `collection`: the MongoDB collection to store sessions in\n\n**Note:** You can pass a callback to the `MongoDBStore` constructor,\nbut this is entirely optional. The Express 3.x example demonstrates\nthat you can use the MongoDBStore class in a synchronous-like style: the\nmodule will manage the internal connection state for you.\n\n\n```javascript\nvar express = require('express');\nvar session = require('express-session');\nvar MongoDBStore = require('connect-mongodb-session')(session);\n\nvar app = express();\nvar store = new MongoDBStore({\n  uri: 'mongodb://localhost:27017/connect_mongodb_session_test',\n  collection: 'mySessions'\n});\n\nstore.on('connected', function() {\n  store.client; // The underlying MongoClient object from the MongoDB driver\n});\n\n// Catch errors\nstore.on('error', function(error) {\n  assert.ifError(error);\n  assert.ok(false);\n});\n\napp.use(require('express-session')({\n  secret: 'This is a secret',\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 24 * 7 // 1 week\n  },\n  store: store,\n  // Boilerplate options, see:\n  // * https://www.npmjs.com/package/express-session#resave\n  // * https://www.npmjs.com/package/express-session#saveuninitialized\n  resave: true,\n  saveUninitialized: true\n}));\n\napp.get('/', function(req, res) {\n  res.send('Hello ' + JSON.stringify(req.session));\n});\n\nserver = app.listen(3000);\n```\n\n## It throws an error when it can't connect to MongoDB\n\n\nYou should pass a callback to the `MongoDBStore` constructor to catch\nerrors. If you don't pass a callback to the `MongoDBStore` constructor,\n`MongoDBStore` will `throw` if it can't connect.\n\n\n```javascript\nvar express = require('express');\nvar session = require('express-session');\nvar MongoDBStore = require('connect-mongodb-session')(session);\n\nvar app = express();\nvar numExpectedSources = 2;\nvar store = new MongoDBStore(\n  {\n    uri: 'mongodb://bad.host:27000/connect_mongodb_session_test?connectTimeoutMS=10',\n    databaseName: 'connect_mongodb_session_test',\n    collection: 'mySessions'\n  },\n  function(error) {\n    // Should have gotten an error\n  });\n\nstore.on('error', function(error) {\n  // Also get an error here\n});\n\napp.use(session({\n  secret: 'This is a secret',\n  cookie: {\n    maxAge: 1000 * 60 * 60 * 24 * 7 // 1 week\n  },\n  store: store,\n  // Boilerplate options, see:\n  // * https://www.npmjs.com/package/express-session#resave\n  // * https://www.npmjs.com/package/express-session#saveuninitialized\n  resave: true,\n  saveUninitialized: true\n}));\n\napp.get('/', function(req, res) {\n  res.send('Hello ' + JSON.stringify(req.session));\n});\n\nserver = app.listen(3000);\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mongodb-js/connect-mongodb-session.git"
  },
  "scripts": {
    "docs": "acquit-markdown -r acquit-ignore -p './test/examples.test.js' -h './HEADER.md' > README.md",
    "test": "env NODE_PATH=../ ./node_modules/mocha/bin/mocha ./test/*.test.js",
    "test-travis": "env NODE_PATH=../ ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/*.test.js",
    "unit-coverage": "env NODE_PATH=../ ./node_modules/istanbul/lib/cli.js cover ./node_modules/mocha/bin/_mocha -- -R spec ./test/unit.test.js"
  },
  "version": "2.0.3"
}
